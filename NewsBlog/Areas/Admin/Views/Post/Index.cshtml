@using X.PagedList
@using X.PagedList.Mvc.Core
@using X.PagedList.Web.Common

@model IPagedList<NewsBlog.ViewModels.PostListViewModel>
@{
    ViewData["Title"] = "Post list";
}

<div class="container-fluid">
    <a class="btn btn-success mb-3" asp-action="Create" asp-controller="Post" asp-area="Admin">Create post</a>
    <div class="card">
        <div class="card-header bg-dark">
            <h4 class="card-title text-white">Posts List</h4>
        </div>
        <div class="card-body" style="background-color: lightgray; padding: 20px;">
            <div class="row">
                @foreach (var post in Model)
                {
                    <div class="col-lg-4 col-md-6 col-sm-12 mb-4 d-flex align-items-stretch">
                        <div class="card h-100 w-100">
                            <div class="card-body d-flex flex-column">
                                <div class="media-container mb-3">
                                    @if (!string.IsNullOrEmpty(post.VideoUrl))
                                    {
                                        <div class="embed-responsive embed-responsive-16by9">
                                            <video controls class="embed-responsive-item" style="border-radius: 5px;">
                                                <source src="~/videos/@post.VideoUrl" type="video/mp4">
                                                Your browser does not support the video tag.
                                            </video>
                                        </div>
                                    }
                                    else if (!string.IsNullOrEmpty(post.ImageUrl))
                                    {
                                        <div class="embed-responsive embed-responsive-16by9">
                                            <img src="~/images/@post.ImageUrl" class="embed-responsive-item" style="border-radius: 5px;">
                                        </div>
                                    }
                                    else
                                    {
                                        <div class="embed-responsive embed-responsive-16by9">
                                            <img src="~/images/uploadImage.jpg" class="embed-responsive-item" style="border-radius: 5px;">
                                        </div>
                                    }
                                </div>
                                <h4 class="card-title" style="font-weight: bold; color: #353839;">@post.Title</h4>
                                <p class="card-text">
                                    @Html.Raw(post.Description!.Length <= 200 ? post.Description : post.Description.Substring(0, 200) + "...")
                                </p>
                                <p class="text-muted" style="font-size: 0.9rem;">@post.CreatedAt</p>
                                <div class="mt-auto">
                                    <h6 class="fw-bold">Writer: @post.AuthorName</h6>
                                    <div class="d-flex justify-content-between">
                                        <a class="btn btn-warning btn-sm" asp-area="Admin" asp-controller="Post" asp-action="Edit" asp-route-id="@post.Id">Edit</a>
                                        <form asp-area="Admin" asp-controller="Post" asp-action="Delete" asp-route-id="@post.Id" method="post" onsubmit="return confirm('Are you sure about deleting the post?')" class="d-inline">
                                            <button type="submit" class="btn btn-danger btn-sm">Delete</button>
                                        </form>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
        <div class="card-footer">
            Page @(Model?.PageCount < Model!.PageNumber ? 0 : Model!.PageNumber) of @Model!.PageCount
            @Html.PagedListPager(Model, page => Url.Action("Index", new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }),
                     new PagedListRenderOptions()
            {
                Display = PagedListDisplayMode.IfNeeded,
                DisplayPageCountAndCurrentLocation = false,
                DisplayLinkToFirstPage = PagedListDisplayMode.Always,
                DisplayLinkToLastPage = PagedListDisplayMode.Always,
                DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
                DisplayLinkToNextPage = PagedListDisplayMode.Always,
                DisplayLinkToIndividualPages = true,
                MaximumPageNumbersToDisplay = 6,
                ContainerDivClasses = new List<string> { "d-flex", "justify-content-center" },
                UlElementClasses = new List<string> { "pagination" },
                LiElementClasses = new List<string> { "page-item" },
                PageClasses = new List<string> { "page-link", "btn", "btn-primary" },
                ActiveLiElementClass = "active"
            })
        </div>
    </div>
</div>
